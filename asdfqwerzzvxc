import cv2
import numpy as np
from jetracer.nvidia_racecar import NvidiaRacecar

car = NvidiaRacecar()
def nothing(x):
    pass

cap = cv2.VideoCapture(0)

cv2.namedWindow('HSV Trackbars')
cv2.createTrackbar('H_min', 'HSV Trackbars', 0, 179, nothing)
cv2.createTrackbar('S_min', 'HSV Trackbars', 0, 255, nothing)
cv2.createTrackbar('V_min', 'HSV Trackbars', 250, 255, nothing)
cv2.createTrackbar('H_max', 'HSV Trackbars', 179, 179, nothing)
cv2.createTrackbar('S_max', 'HSV Trackbars', 15, 255, nothing)
cv2.createTrackbar('V_max', 'HSV Trackbars', 255, 255, nothing)

# 스티어링 발행 함수 (실제 구현은 사용 환경에 따라 다를 수 있습니다)
def publish_steering(value):
    print(f"Publishing steering: {value}")
    # 실제 발행 로직을 여기에 구현하세요

if cap.isOpened():
    while True:
        ret, frame = cap.read()
        if not ret:
            print('No frame')
            break

        hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

        h_min = cv2.getTrackbarPos('H_min', 'HSV Trackbars')
        s_min = cv2.getTrackbarPos('S_min', 'HSV Trackbars')
        v_min = cv2.getTrackbarPos('V_min', 'HSV Trackbars')
        h_max = cv2.getTrackbarPos('H_max', 'HSV Trackbars')
        s_max = cv2.getTrackbarPos('S_max', 'HSV Trackbars')
        v_max = cv2.getTrackbarPos('V_max', 'HSV Trackbars')

        lower = np.array([h_min, s_min, v_min])
        upper = np.array([h_max, s_max, v_max])

        mask = cv2.inRange(hsv, lower, upper)
        result = cv2.bitwise_and(frame, frame, mask=mask)

        h, w = mask.shape
        wvX = np.arange(0, w)
        wvXX = wvX - (w / 2)
        wvY = np.arange(0,h).reshape(h,1)
        tresh = result[:,:,0] / 255.0  # 단일 채널 사용
        

        tresh12 = tresh * wvXX * wvY
        #tresh12 = tresh
        lineDetect = np.sum(tresh12)



        top_half = mask[:h//2, :]         # Top half of the mask
        left_top_half = top_half[:, :w//2]    # Top left quarter
        right_top_half = top_half[:, w//2:]   # Top right quarter
        bottom_half = mask[h//2:, :]       # Bottom half of the mask

        left_top_sum = np.sum(left_top_half)
        right_top_sum = np.sum(right_top_half)
        bottom_sum = np.sum(bottom_half)

        print(lineDetect)
        if bottom_sum == 0:
            if left_top_sum == 0:
                if right_top_sum >0:
                    car.steering = -1

            elif right_top_sum == 0:
                if left_top_sum >0:
                    car.steering = -1
            else:
                car.steering = 0.35

        else:
            if lineDetect > 100000:
                print("r")
                if lineDetect > 300000:
                    car.steering = 0.2
                else:
                    car.steering = 0.1

            elif lineDetect < -200000:
                print("l")
                if lineDetect < -500000:
                    car.steering = -0.5
                else:
                    car.steering = -0.2
            else:
                print("g")
                car.steering = 0
        
        cv2.imshow('Threshold', tresh)
        cv2.imshow('Original', frame)
        cv2.imshow('Mask', mask)
        
        car.throttle = 0.2	
        key = cv2.waitKey(1)
        if key == 27:  # ESC 키
            car.throttle = 0
            break
else:
    print("Can't open camera.")

cap.release()
cv2.destroyAllWindows()
